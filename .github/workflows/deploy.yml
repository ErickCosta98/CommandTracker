name: Deploy to PyPI and TestPyPI

on:
  push:
    branches:
      - dev     # Desplegar a TestPyPI en la rama 'dev'
      - main    # Desplegar a PyPI en la rama 'main'
    paths-ignore:
      - 'README.md'
      - 'SECURITY.md'
      - 'LICENSE'

jobs:
  build-deploy:
    runs-on: ubuntu-latest

    steps:
      # Checkout del código fuente
      - name: Check out code
        uses: actions/checkout@v3

      # Configurar Python
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'  # Ajusta a la versión de Python que usas

      # Instalar dependencias de empaquetado
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install setuptools wheel twine

      # Construir el paquete
      - name: Build the package
        run: |
          python setup.py sdist bdist_wheel

      # Desplegar a TestPyPI en la rama 'dev'
      - name: Deploy to TestPyPI
        if: github.ref == 'refs/heads/dev'
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.TEST_PYPI_API_TOKEN }}
        run: |
          python -m twine upload --repository-url https://test.pypi.org/legacy/ dist/*

      # Desplegar a PyPI en la rama 'main'
      - name: Deploy to PyPI
        if: github.ref == 'refs/heads/main'
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
        run: |
          python -m twine upload dist/*
